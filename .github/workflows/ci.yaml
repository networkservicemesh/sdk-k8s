---
name: ci
on:
  pull_request:
  push:
    branches:
      - 'release/**'
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
      - name: Install yamllint
        run: pip install --user yamllint
      - name: Run yamllint
        run: ~/.local/bin/yamllint -c .yamllint.yml --strict .
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  build-and-test:
    name: build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
      - name: Build
        run: go build -race  ./...
      - name: Test
        run: go test -race ./...
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
  restrictNSMDeps:
    name: Restrict dependencies on github.com/networkservicemesh/*
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restrict dependencies on github.com/networkservicemesh/*
        run: |
          for i in $(grep github.com/networkservicemesh/ go.mod |grep -v '^module' | sed 's;.*\(github.com\/networkservicemesh\/[a-zA-z\/]*\).*;\1;g' | sort -u);do
            if [ "${i}" != "github.com/networkservicemesh/sdk" ] && [ "${i}" != "github.com/networkservicemesh/api" ]; then
              echo Dependency on "${i}" is forbidden
              exit 1
            fi
          done
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.18
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )
  excludereplace:
    name: Exclude Replace in go.mod
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2
      - name: Exclude replace in go.mod
        run: |
          grep ^replace go.mod || exit 0
          exit 1
  gogenerate:
    name: Check generated files
    runs-on: ubuntu-latest
    steps:
      - name: Setup envs
        run: |
          echo GOPATH=$GITHUB_WORKSPACE >> $GITHUB_ENV
          echo GO111MODULE=on >> $GITHUB_ENV
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - uses: actions/setup-go@v1
        with:
          go-version: 1.18
      - name: Generate files
        run: go generate ./pkg/tools/k8s/gen.go
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Check for changes in generated code
        run: |
          git diff --name-only --exit-code ./pkg/tools/k8s/client || (echo "Rerun go generate ./... locally and resubmit" && exit -1)
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
